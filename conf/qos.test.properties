# QOS Runner could eventually interface with other messaging systems, for now set to true
SLACK_INTEGRATION=true
# Create a [Slack Bot](https://api.slack.com/bot-users) and set the auth token here
SLACK_BOT_TOKEN=[THE_TOKEN]
# Channel were all the verbose communication will go, i.e. every time a test succeeds.
SLACK_VERBOSE_CHANNEL=web-e2e-verbose
# Channel were all the digest communication will go, i.e when a test fails or recovers.
SLACK_DIGEST_CHANNEL=web-e2e-digest
# If set to true, it will broadcast to the verbose channel every time a test succeeds.
BROADCAST_SUCCESS=true
# How mamy times a test has to fail consecutively to be considered failed.
CONSECUTIVE_FAILURES=2
# Timeout for waiting for a test to end.
TIMEOUT_IN_MINUTES=20
# How many tests the QOS-Runner will run in parallel.
PARALLEL_TESTS=10
# Wait time once the servers is shutting down for tests to finish.
SHUTDOWN_WAIT_IN_MINUTES=10
# Delay between a test finishes and the same test runs again. This determines the cycle time.
DELAY_BETWEEN_IN_SECONDS=300
# Delay between a failed test finishes and the same test runs again.
DELAY_BETWEEN_IN_SECONDS_WHEN_FAIL=5
# If true, tests will be spread accross DELAY_BETWEEN_IN_SECONDS. i.e if you have 50 tests and cycle is 300 seconds, more or less every 6 seconds a test will run
SPREAD_TESTS=true
# Comma separated list of Suites to run (@Suites tag)
SUITES=SMOKE_FOR_TEST
# Base package where all the JUnit tests reside.
SUITES_PACKAGE=io.split


